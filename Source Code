import nltk
from nltk.tokenize import sent_tokenize, word_tokenize
import tkinter as tk
from tkinter import scrolledtext
from tkinter import ttk

nltk.download('punkt')

def count_words_and_characters(chunk):
    words = word_tokenize(chunk)
    word_count = len(words)
    char_count = sum(len(word) for word in words)
    return word_count, char_count

def split_text_into_chunks(text, unit, max_measure, num_chunks):
    if unit == "characters":
        measure_function = len
    elif unit == "words":
        measure_function = lambda x: len(word_tokenize(x))
    else:
        measure_function = lambda x: len(word_tokenize(x))

    sentences = sent_tokenize(text)
    current_chunk = []
    current_measure = 0
    chunks = []

    for sentence in sentences:
        current_chunk.append(sentence)
        current_measure += measure_function(sentence)

        if current_measure >= max_measure or len(chunks) >= num_chunks:
            chunks.append(' '.join(current_chunk))
            current_chunk = []
            current_measure = 0

    if current_chunk:
        chunks.append(' '.join(current_chunk))

    return chunks

def process_text():
    input_text = input_text_widget.get("1.0",'end-1c')
    unit = measure_unit_var.get()
    max_measure = int(max_measure_entry.get())
    num_chunks = int(number_chuncks.get())
    text_chunks = split_text_into_chunks(input_text, unit, max_measure, num_chunks)

    # result window
    result_window = tk.Toplevel(root)
    result_window.title("Text Chunks")

    for i, chunk in enumerate(text_chunks):
        word_count, char_count = count_words_and_characters(chunk)

        chunk_label = tk.Label(result_window, text=f"Chunk {i + 1} - Words: {word_count}, Characters: {char_count}", font=("Helvetica", 12, "bold"))
        chunk_label.pack(pady=5)
        
        chunk_text = scrolledtext.ScrolledText(result_window, wrap=tk.WORD, width=60, height=10)
        chunk_text.insert(tk.END, chunk)
        chunk_text.config(state=tk.DISABLED)
        chunk_text.pack(pady=10)

root = tk.Tk()
root.title("Text Chunker")
number_chuncks = 5

# Text input area
input_text_widget = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=60, height=10)
input_text_widget.pack(pady=10)

measure_unit_var = tk.StringVar(value="characters")
measure_unit_label = tk.Label(root, text="Measurement Unit:")
measure_unit_label.pack()

measure_unit_frame = ttk.Frame(root)
measure_unit_frame.pack()

measure_unit_chars = ttk.Radiobutton(measure_unit_frame, text="Characters", variable=measure_unit_var, value="characters")
measure_unit_words = ttk.Radiobutton(measure_unit_frame, text="Words", variable=measure_unit_var, value="words")
measure_unit_tokens = ttk.Radiobutton(measure_unit_frame, text="Tokens", variable=measure_unit_var, value="tokens")

measure_unit_chars.grid(row=0, column=0)
measure_unit_words.grid(row=0, column=1)
measure_unit_tokens.grid(row=0, column=2)

#  max measurement enter
max_measure_label = tk.Label(root, text="Maximum Measurement:")
max_measure_label.pack()

max_measure_entry = tk.Entry(root)
max_measure_entry.pack(pady=5)

# default value with any measurement
max_measure_entry.insert(tk.END, "4000")

# process command button
process_button = tk.Button(root, text="Process Text", command=process_text)
process_button.pack(pady=10)

root.mainloop()
